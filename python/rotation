import boto3
import redis

def get_secret(secret_name):
    """
    Retrieves the secret value from AWS Secrets Manager.
    """
    client = boto3.client('secretsmanager', region_name='your-region')

    try:
        response = client.get_secret_value(SecretId=secret_name)
        secret_value = response['SecretString']
        return secret_value
    except Exception as e:
        print(f"Error retrieving secret {secret_name}: {str(e)}")
        return None

def connect_to_redis():
    """
    Connects to the ElastiCache Redis cluster using retrieved secrets.
    """
    secret_name = 'your-secret-name'  # Replace with your actual secret name
    redis_endpoint = 'your-redis-endpoint'  # Replace with your actual Redis endpoint

    secret_value = get_secret(secret_name)
    if not secret_value:
        print("Failed to retrieve secret. Exiting.")
        return

    try:
        redis_config = {
            'host': redis_endpoint,
            'port': 6379,
            'password': secret_value
        }

        r = redis.StrictRedis(**redis_config)
        # Now you can use 'r' to interact with your Redis cache
        print("Connected to Redis successfully!")
        # Example: r.set('my_key', 'my_value')
    except Exception as e:
        print(f"Error connecting to Redis: {str(e)}")

if __name__ == "__main__":
    connect_to_redis()
